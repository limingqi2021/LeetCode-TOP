class Solution {
public:
    bool res;
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(dfs(board,word,i,j,0))
                return true;
            }
        }
        return false;
    }
    bool dfs(vector<vector<char>>& board,string word,int i,int j,int k){
        bool flag=false;
        if(i>=0&&i<board.size()&&j>=0&&j<board[0].size()&&board[i][j]==word[k]){
            if(k==word.size()-1)
            return true;
            board[i][j]='$';
            flag=dfs(board,word,i-1,j,k+1)
                ||dfs(board,word,i+1,j,k+1)
                ||dfs(board,word,i,j-1,k+1)
                ||dfs(board,word,i,j+1,k+1);
            board[i][j]=word[k];
        }
        return flag;
    }
};
