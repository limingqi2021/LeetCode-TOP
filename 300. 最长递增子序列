class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        // if(nums.empty())
        //     return 0;
        // int n=nums.size();
        // vector<int> dp(n,1);
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<i;j++){
        //         if(nums[j]<nums[i])
        //         dp[i]=max(dp[i],dp[j]+1);
        //     }
        // }
        // return *max_element(dp.begin(),dp.end());

    int n=0,len=nums.size();
    if(len==0)
    return 0;
    vector<int> dp;
    dp.push_back(nums[0]);
    for(int i=1;i<len;i++){
        if(nums[i]>dp.back()){
            dp.push_back(nums[i]);
        }else{
            // int l=0,r=n;
            // while(l<=r){
            //     int mid=(l+r)/2;
            //     if(dp[mid]<nums[i]){
            //         l=mid+1;
            //     }else{
            //         r=mid-1;
            //     }
            // }
            // dp[l]=nums[i];
            int index=lower_bound(dp.begin(),dp.end(),nums[i])-dp.begin();
            dp[index]=nums[i];
        }
    }
    return dp.size();
    }
};
	// int a[6] = {5, 3, 2, 6, 1, 4};
	// int b = a[0];
	// int c = a[1];
	// cout<<max(b, c)<<" "<<min(b,c)<<endl; //输出为5 3
	// cout<<max_element(a, a+6) - a<<endl;// 输出为3 
	// cout<<*max_element(a, a+6)<<endl;//输出为 6 
	// cout<<min_element(a, a+6) - a<<endl;// 输出为4 
	// cout<<*min_element(a, a+6)<<endl;	 //输出为1 

    // int n=0,len=nums.size();
    // if(len==0)
    // return 0;
    // vector<int> dp(len,0);
    // dp[n]=nums[0];
    // for(int i=1;i<len;i++){
    //     if(nums[i]>dp[n]){
    //         dp[++n]=nums[i];
    //     }else{
    //         int l=0,r=n;
    //         while(l<=r){
    //             int mid=(l+r)/2;
    //             if(dp[mid]<nums[i]){
    //                 l=mid+1;
    //             }else{
    //                 r=mid-1;
    //             }
    //         }
    //         dp[l]=nums[i];
    //     }
    // }
    // return n+1;

